```{r}
#| output: false
#| echo: false

# Only edit below this line
#############################################################################
test_number <- 5

#Postition of Needle Valve O2 IGN
valve_O2_pos <- 0.5    #Turns from close

#Postition of Neelde valve PRDT
valve_prdt_pos <- 0.1  #Turns from close
#############################################################################
# Only edit above this line
```

---
title: "Pre-Detonator Firing"
subtitle: "Firing  02"
date: 12.10.2024 
author:
  - name: PERSEUS
    #orcid: 0009-0003-8702-2700
    email: nbartzsch@ethz.ch
    affiliation: 
      - name: ARIS
        url: https://aris-space.ch
editor: visual
format: 
  pdf:
    output-file: "results_bilat_cf.pdf"
    documentclass: scrartcl
    geometry:
      - left=30mm
      - right=30mm
      - bottom=5mm
      - top=1mm
execute:
  eval: true
  echo: false
---

```{r}
#| output: false

##Load libraries

library(tidyverse)
library(gt)
```

```{r}
#| output: false
#| echo: false

# Only edit below this line
#############################################################################
# Import data
processed_data_sens <- read_csv(file = "processed_data/processed_data_sens.csv")
processed_data_act <- read_csv(file = "processed_data/processed_data_act.csv")

#############################################################################
# Only edit above this line

test_id <- test_number + 1
```

```{r}
#| output: false

table_geom <- data.frame(
  O2_pos = paste(valve_O2_pos, "[T.f.c]"),
  prdt_pos = paste(valve_prdt_pos, "[T.f.c]")
)

table_geom |> 
  gt() |> 
  cols_label(
    O2_pos = ("Position of Needle Valve O2 IGN"), 
    prdt_pos = ("Position of Needle Valve PRDT")
  ) |> 
  cols_align(align = "center")
```

```{r}

actuation_number_open <- 11
actuation_number_close <- actuation_number_open + 1

actuation_time_open <- as.numeric(processed_data_act[actuation_number_open, 1])
actuation_time_close <-  as.numeric(processed_data_act[actuation_number_close, 1])

actuation_time_before <- actuation_time_open - 0.5
actuation_time_after <- actuation_time_close + 5 

plot_data <-  processed_data_sens |>
  filter(zero_time > actuation_time_before) |>
  filter(zero_time < actuation_time_after)

plot_data$zero_time <- plot_data$zero_time - actuation_time_open
plot_data$sensor_id <- as.factor(plot_data$sensor_id)
actuation_time_close_relative <-  actuation_time_close - actuation_time_open

actuation_number_spark_on <- 33
actuation_number_spark_off <- actuation_number_spark_on + 1

spark_time_on <- as.numeric(processed_data_act[actuation_number_spark_on, 1]) - actuation_time_open
spark_time_off <- as.numeric(processed_data_act[actuation_number_spark_off, 1]) - actuation_time_open

spark_length <- spark_time_off -spark_time_on
valve_open <-  actuation_time_close - actuation_time_open
diff_close_spk <-  spark_time_on - (actuation_time_close - actuation_time_open)

#processed_data_prdt <- plot_data |>
#  filter(sensor_id == 105)

#processed_data_ign_ox <- plot_data |>
#  filter(sensor_id == 108)

#max_prdt_p <- max(processed_data_prdt$value)
#max_ign_ox_p <-  max(processed_data_ign_ox$value)

#table_max_p <-  data.frame(
#  prdt_p = paste(round(max_prdt_p, 2), "[barg]"),
#  ign_p = paste(round(max_ign_ox_p, 2), "[barg]")
#)

#table_max_p |> 
#  gt() |> 
#  cols_label(
#    prdt_p = ("Max Pressure in PRDT"), 
#    ign_p = ("Max Pressure in Ign Ox.")
#  ) |> 
#  cols_align(align = "center")


# 114 ign fuel pressure
# 115 prg pressure
# 121 prdt pressure 
```

### Measurements

The first gray box indicates the opening time of the ignition oxidizer valve. The second time shows the time where the spark plug is active.

```{r, fig.width=11, fig.height=11}

new_labels <- c(
  "129" = "Ignition Fuel Pressure",
  "136" = "Pre-Detonator Pressure",
  "139" = "Ignition Oxidizer Pressure",
  "142" = "Pre-Detonator Temperature"
)

#Facet plot
ggplot(plot_data, aes(x = zero_time,
                      y = value,
                      color = sensor_id)) +
  geom_rect(aes(xmin = 0, xmax = actuation_time_close_relative, ymin = -Inf, ymax = Inf),
            fill = "grey", color = NA, alpha = 0.3) +
  geom_rect(aes(xmin = spark_time_on, xmax = spark_time_off, ymin = -Inf, ymax = Inf),
            fill = "grey", color = NA, alpha = 0.3) +
  geom_path(linewidth = 0.75)+
  facet_wrap(~ sensor_id,
             ncol = 1,
             labeller = as_labeller(new_labels),
             scales = "free") +
  labs(
    x = "Time [seconds]",
    y = "Pressure [barg] / Temperature [°C]",
    color = "Sensor readings"
  ) +
  scale_color_manual(values = c("#ff0019", "orange", "#001e5e", "green"), labels = new_labels) +
  theme_minimal()


# #One plot with two curves
# ggplot(plot_data, aes(x = zero_time, 
#                       y = value, 
#                       color = sensor_id)) +
#   geom_rect(aes(xmin = 0, xmax = actuation_time_close, ymin = -Inf, ymax = Inf), 
#             fill = "#d3d3d3", color = NA, alpha = 0.3) +
#   geom_path(linewidth = 0.75)+
#   labs(
#     x = "Time [seconds]",  
#     y = "Pressure [barg] / Temperatur [°C]", 
#     color = "Pressure reading"
#   ) +
#   scale_color_manual(values = c("#ff0019", "#001e5e"), labels = new_labels) +
#   theme_minimal()
```
