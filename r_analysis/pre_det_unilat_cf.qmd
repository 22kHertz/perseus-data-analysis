```{r}
#| output: false
#| echo: false

# Only edit below this line
#############################################################################
#Postition of Needle Valve O2 IGN
valve_O2_pos <- 9    #Turns from close

#Postition of Neelde valve H2 IGN
valve_H2_pos <- NA  #Turns from close

#Pressure on the O2 pressure reducer
O2_p_red <- 10  #in bar

#Pressure on H2 pressure reducer
H2_p_red <- NA  #in bar

#Time to length given in frames recorded with 240 fps
ttl <- 69
#############################################################################
# Only edit above this line
```

---
title: "Unilateral Coldflow of Pre-Detonator"
subtitle: "O2 Coldflow  02"
date: 18.10.2024 
author:
  - name: PERSEUS
    #orcid: 0009-0003-8702-2700
    email: nbartzsch@ethz.ch
    affiliation: 
      - name: ARIS
        url: https://aris-space.ch
editor: visual
format: 
  pdf:
    output-file: "results_unilat_O2_02.pdf"
    documentclass: scrartcl
    geometry:
      - left=30mm
      - right=30mm
      - bottom=5mm
      - top=1mm
execute:
  eval: true
  echo: false
---

```{r}
#| output: false

##Load libraries

library(tidyverse)
library(gt)
```

```{r}
#| output: false
#| echo: false

# Only edit below this line
#############################################################################
# Import data
processed_data_sens <- read_csv(file = "processed_data/processed_data_sens.csv")
processed_data_act <- read_csv(file = "processed_data/processed_data_act.csv")

#############################################################################
# Only edit above this line
```

### Setup Configuration

```{r}

#Create df with talbe data
table_geom <- data.frame(
  O2_pos = paste(valve_O2_pos, "[t.f.c]"),
  O2_pre = paste(O2_p_red, "[bar]"),
  # H2_pos = paste(valve_H2_pos, "[t.f.c]"),
  # H2_pre = paste(H2_p_red, "[bar]"),
  TTL = paste(ttl, "[frames]")
)

#Create table
table_geom |> 
  gt() |> 
  cols_label(
    O2_pos = ("NV O2 IGN"),
    O2_pre = ("Pressure on O2 PRV"),
    # H2_pos = ("NV H2 IGN"),
    # H2_pre = ("Pressure on H2 PRV"),
    TTL = ("Time to length")
  ) |> 
  cols_align(align = "center")
```

```{r}
#Get time of actuations

#Get index number from opening actuation
actuation_open <- 41

#Get opening and closing times of actuator
time_open <- as.numeric(processed_data_act[actuation_open, 1])
time_close <- as.numeric(processed_data_act[actuation_open + 1, 1])

#Start the plot 0.5 sec before first actuation and end 5s after last actuation
start_plot_time <-  time_open - 0.5
end_plot_time <- time_open + 3

#Create new df only containing points of interest
plot_data <-  processed_data_sens |>
  filter(zero_time > start_plot_time) |>
  filter(zero_time < end_plot_time)

#Set zero to be at first actuation
plot_data$zero_time <- plot_data$zero_time - time_open

#Get actuation time in new zero time
time_close <- time_close - time_open

#Convert sensor_id to factors to allow for facet polt
plot_data$sensor_id <- as.factor(plot_data$sensor_id)

#Remove the not used gas from plot df
plot_data <- plot_data |>
  filter(sensor_id != 159)
```

### Measurements

The gray box indicates the opening time of the valve.

```{r, fig.width=11, fig.height=8}

new_labels <- c(
  "166" = "Pre-Detonator Pressure",
  "169" = "Ignition Oxidizer Pressure"
)

#Facet plot
ggplot(plot_data, aes(x = zero_time,
                      y = value,
                      color = sensor_id)) +
  geom_rect(aes(xmin = 0, xmax = time_close, ymin = -Inf, ymax = Inf),
            fill = "#D3D3D3", color = NA, alpha = 0.3) +
  geom_path(linewidth = 0.75)+
  facet_wrap(~ sensor_id,
             ncol = 1,
             labeller = as_labeller(new_labels),
             scales = "free") +
  labs(
    x = "Time [seconds]",
    y = "Pressure [barg]",
    color = "Sensor readings"
  ) +
  scale_color_manual(values = c("#FF8624", "#001e5e", "#ff0019"), labels = new_labels) +
  theme_minimal()
```

```{r}
#| eval: false

# #Get time of actuations
# actuation_number_open <- 11
# actuation_number_close <- actuation_number_open + 1
# 
# actuation_time_open <- as.numeric(processed_data_act[actuation_number_open, 1])
# actuation_time_close <-  as.numeric(processed_data_act[actuation_number_close, 1])
# 
# actuation_time_before <- actuation_time_open - 0.5
# actuation_time_after <- actuation_time_close + 5 
# 
# plot_data <-  processed_data_sens |>
#   filter(zero_time > actuation_time_before) |>
#   filter(zero_time < actuation_time_after)
# 
# plot_data$zero_time <- plot_data$zero_time - actuation_time_open
# plot_data$sensor_id <- as.factor(plot_data$sensor_id)
# actuation_time_close_relative <-  actuation_time_close - actuation_time_open
# 
# actuation_number_spark_on <- 33
# actuation_number_spark_off <- actuation_number_spark_on + 1
# 
# spark_time_on <- as.numeric(processed_data_act[actuation_number_spark_on, 1]) - actuation_time_open
# spark_time_off <- as.numeric(processed_data_act[actuation_number_spark_off, 1]) - actuation_time_open
# 
# spark_length <- spark_time_off -spark_time_on
# valve_open <-  actuation_time_close - actuation_time_open
# diff_close_spk <-  spark_time_on - (actuation_time_close - actuation_time_open)

#processed_data_prdt <- plot_data |>
#  filter(sensor_id == 105)

#processed_data_ign_ox <- plot_data |>
#  filter(sensor_id == 108)

#max_prdt_p <- max(processed_data_prdt$value)
#max_ign_ox_p <-  max(processed_data_ign_ox$value)

#table_max_p <-  data.frame(
#  prdt_p = paste(round(max_prdt_p, 2), "[barg]"),
#  ign_p = paste(round(max_ign_ox_p, 2), "[barg]")
#)

#table_max_p |> 
#  gt() |> 
#  cols_label(
#    prdt_p = ("Max Pressure in PRDT"), 
#    ign_p = ("Max Pressure in Ign Ox.")
#  ) |> 
#  cols_align(align = "center")


#sens:  prdt_p      159
#       ign_fue_p   166
#       ign_oxd_p   169

# act:  fue   216
#       ox    217 
#       spk   218
```
